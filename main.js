!function(){"use strict";const e={formSelector:".modal__form_validate",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),n.classList.remove(r.errorClass),n.textContent=""},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};function a(e){let{btn:t,isLoading:r,defaultText:n="Save",loadingText:a="Saving..."}=e;t.textContent=r?a:n}const o=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"166c6acc-ad57-4210-878a-b822a32c3faa","Content-Type":"application/json"}});o.getAppInfo().then((e=>{let[t,r]=e;r.forEach((e=>{N(e,"append")})),u.src=t.avatar,c.textContent=t.name,d.textContent=t.about})).catch(console.error);const s=document.querySelector(".profile__edit-btn"),i=document.querySelector(".profile__add-btn"),l=document.querySelector(".profile__avatar-btn"),c=document.querySelector(".profile__name"),d=document.querySelector(".profile__description"),u=document.querySelector(".profile__avatar"),m=document.querySelector("#edit-modal"),_=m.querySelector(".modal__form"),h=m.querySelector("#profile-name-input"),f=m.querySelector("#profile-description-input"),v=document.querySelector("#delete-modal"),p=v.querySelector(".modal__form"),b=document.querySelector(".modal__cancel-btn"),S=document.querySelector("#add-card-modal"),y=S.querySelector(".modal__form"),g=S.querySelector(".modal__submit-btn"),L=S.querySelector("#add-card-name-input"),q=S.querySelector("#add-card-link-input"),k=document.querySelector("#preview-modal"),E=k.querySelector(".modal__image"),C=k.querySelector(".modal__caption"),x=document.querySelector("#card-template"),T=document.querySelector(".cards__list"),U=document.querySelectorAll(".modal");let $,D;const A=document.querySelector("#avatar-modal"),I=A.querySelector(".modal__form"),R=A.querySelector("#profile-avatar-input");function P(e){if("Escape"===e.key){const e=document.querySelector(".modal_opened");e&&w(e)}}function B(e){document.addEventListener("keydown",P),e.classList.add("modal_opened")}function w(e){document.removeEventListener("keydown",P),e.classList.remove("modal_opened")}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e){const t=x.content.querySelector(".card").cloneNode(!0);t.querySelector(".card__title").textContent=e.name;const r=t.querySelector(".card__image");r.src=e.link,r.alt=e.name;const n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return e.isLiked&&n.classList.add("card__like-btn_liked"),n.addEventListener("click",(t=>{!function(e,t){e.preventDefault();const r=e.target;r.disabled=!0;const n=r.classList.contains("card__like-btn_liked");o.changeLikeStatus(t,n).then((e=>{r.classList.toggle("card__like-btn_liked")})).catch((e=>{console.error("Error:",e)})).finally((()=>{r.disabled=!1}))}(t,e._id)})),r.addEventListener("click",(()=>{B(k),E.src=e.link,E.alt=e.name,C.textContent=e.name})),a.addEventListener("click",(r=>{!function(e,t){$=e,D=t,B(v)}(t,e._id)})),t}(e);"append"===t?T.append(r):T.prepend(r)}var O;b.addEventListener("click",(e=>{w(v)})),s.addEventListener("click",(()=>{var r,n;h.value=c.textContent,f.value=d.textContent,B(m),r=_,n=e,[h,f].forEach((e=>{t(r,e,n)}))})),U.forEach((e=>{e.addEventListener("click",(t=>{(t.target.classList.contains("modal_opened")||t.target.classList.contains("modal__close-btn"))&&w(e)}))})),i.addEventListener("click",(()=>{B(S)})),l.addEventListener("click",(()=>{B(A)})),I.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;a({btn:r,isLoading:!0,defaultText:"Save",loadingText:"Saving..."}),o.editAvatarInfo(R.value).then((r=>{u.src=r.avatar,I.reset(),w(A),n(t.submitter,e)})).catch(console.error).finally((()=>{a({btn:r,isLoading:!1,defaultText:"Save",loadingText:"Saving..."})}))})),p.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a({btn:t,isLoading:!0,defaultText:"Delete",loadingText:"Deleting..."}),o.deleteCard(D).then((()=>{$.remove(),w(v)})).catch(console.error).finally((()=>{a({btn:t,isLoading:!1,defaultText:"Delete",loadingText:"Deleting..."})}))})),_.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a({btn:t,isLoading:!0,defaultText:"Save",loadingText:"Saving..."}),o.editUserInfo({name:h.value,about:f.value}).then((e=>{c.textContent=e.name,d.textContent=e.about,w(m)})).catch(console.error).finally((()=>{a({btn:t,isLoading:!1,defaultText:"Save",loadingText:"Saving..."})}))})),y.addEventListener("submit",(function(t){t.preventDefault();const r={name:L.value,link:q.value},s=t.submitter;a({btn:s,isLoading:!0}),o.addCard(r).then((t=>{N(t,"prepend"),w(S),n(g,e),y.reset()})).catch(console.error).finally((()=>{a({btn:s,isLoading:!1})}))})),O=e,document.querySelectorAll(O.formSelector).forEach((e=>{((e,n)=>{const a=Array.from(e.querySelectorAll(n.inputSelector)),o=e.querySelector(n.submitButtonSelector);r(a,o,n),a.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const a=`#${t.id}-error`,o=e.querySelector(a);t.classList.add(n.inputErrorClass),o.textContent=r,o.classList.add(n.errorClass)})(e,r,r.validationMessage,n)})(e,s,n),r(a,o,n)}))}))})(e,O)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQU1DLEtBQUtsSixFQUFPaUcsaUJBQWlCL0YsRUFBT1IsZ0JBQ3REeUosRUFBZ0JuSixFQUFPSSxjQUFjRixFQUFPUCxzQkFFbERjLEVBQWtCQyxFQUFXeUksRUFBZWpKLEdBRTVDUSxFQUFVdUQsU0FBU21GLElBQ2pCQSxFQUFhdkMsaUJBQWlCLFNBQVMsV0E5Q2hCd0MsRUFBQ3JKLEVBQVFDLEVBQVNDLEtBQ3RDRCxFQUFRYSxTQUFTQyxNQUdwQmhCLEVBQWVDLEVBQVFDLEVBQVNDLEdBckJib0osRUFBQ3RKLEVBQVFDLEVBQVNzSixFQUFVckosS0FDakQsTUFBTXNKLEVBQWlCLElBQUl2SixFQUFRSSxXQUM3QkYsRUFBYUgsRUFBT0ksY0FBY29KLEdBQ3hDdkosRUFBUUssVUFBVWEsSUFBSWpCLEVBQU9MLGlCQUM3Qk0sRUFBV0ssWUFBYytJLEVBQ3pCcEosRUFBV0csVUFBVWEsSUFBSWpCLEVBQU9KLFdBQVcsRUFjekN3SixDQUFldEosRUFBUUMsRUFBU0EsRUFBUXdKLGtCQUFtQnZKLEVBRzdELEVBMENJbUosQ0FBbUJySixFQUFRb0osRUFBY2xKLEdBQ3pDTyxFQUFrQkMsRUFBV3lJLEVBQWVqSixFQUM5QyxHQUFFLEdBQ0YsRUFNQThJLENBQWtCaEosRUFBUUUsRUFBTyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy9zY3JpcHRzL3ZhbGlkYXRpb24uanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9oZWxwZXJzLmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9BcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHNldHRpbmdzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLm1vZGFsX19mb3JtX3ZhbGlkYXRlXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX3N1Ym1pdC1idG5cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fc3VibWl0LWJ0bl9kaXNhYmxlZFwiLFxuICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxufTtcblxuLy8gU2hvdyBpbnB1dCBlcnJvclxuY29uc3Qgc2hvd0lucHV0RXJyb3IgPSAoZm9ybUVsLCBpbnB1dEVsLCBlcnJvck1zZywgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGVycm9yRWxlbWVudElkID0gYCMke2lucHV0RWwuaWR9LWVycm9yYDtcbiAgY29uc3QgZXJyb3JNc2dFbCA9IGZvcm1FbC5xdWVyeVNlbGVjdG9yKGVycm9yRWxlbWVudElkKTtcbiAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xuICBlcnJvck1zZ0VsLnRleHRDb250ZW50ID0gZXJyb3JNc2c7XG4gIGVycm9yTXNnRWwuY2xhc3NMaXN0LmFkZChjb25maWcuZXJyb3JDbGFzcyk7XG59O1xuXG4vLyBIaWRlIGlucHV0IGVycm9yXG5jb25zdCBoaWRlSW5wdXRFcnJvciA9IChmb3JtRWwsIGlucHV0RWwsIGNvbmZpZykgPT4ge1xuICBjb25zdCBlcnJvck1zZ0VsID0gZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XG4gIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZShjb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgZXJyb3JNc2dFbC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5lcnJvckNsYXNzKTtcbiAgZXJyb3JNc2dFbC50ZXh0Q29udGVudCA9IFwiXCI7XG59O1xuXG4vLyBDaGVjayB2YWxpZGl0eSBvZiBpbnB1dFxuY29uc3QgY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGZvcm1FbCwgaW5wdXRFbCwgY29uZmlnKSA9PiB7XG4gIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xuICAgIHNob3dJbnB1dEVycm9yKGZvcm1FbCwgaW5wdXRFbCwgaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZSwgY29uZmlnKTtcbiAgfSBlbHNlIHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWwsIGlucHV0RWwsIGNvbmZpZyk7XG4gIH1cbn07XG5cbi8vIENoZWNrIGlmIGFueSBpbnB1dCBpcyB2YWxpZFxuY29uc3QgaGFzSW52YWxpZElucHV0ID0gKGlucHV0TGlzdCkgPT4ge1xuICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0KSA9PiB7XG4gICAgcmV0dXJuICFpbnB1dC52YWxpZGl0eS52YWxpZDtcbiAgfSk7XG59O1xuXG4vLyBUb2dnbGUgc3RhdGUgYnV0dG9uIChlbmFibGUvZGlzYWJsZSlcbmNvbnN0IHRvZ2dsZUJ1dHRvblN0YXRlID0gKGlucHV0TGlzdCwgYnV0dG9uRWwsIGNvbmZpZykgPT4ge1xuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcbiAgICBkaXNhYmxlQnV0dG9uKGJ1dHRvbkVsLCBjb25maWcpO1xuICB9IGVsc2Uge1xuICAgIGJ1dHRvbkVsLmRpc2FibGVkID0gZmFsc2U7XG4gICAgYnV0dG9uRWwuY2xhc3NMaXN0LnJlbW92ZShjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gIH1cbn07XG5cbi8vIGFkZCByZXNldFZhbGlkYXRpb25cbmV4cG9ydCBjb25zdCByZXNldFZhbGlkYXRpb24gPSAoZm9ybUVsLCBpbnB1dEVsLCBjb25maWcpID0+IHtcbiAgaW5wdXRFbC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbCwgaW5wdXQsIGNvbmZpZyk7XG4gIH0pO1xufTtcblxuLy8gRGlzYWJsZSBzdWJtaXQgYnV0dG9uXG5leHBvcnQgY29uc3QgZGlzYWJsZUJ1dHRvbiA9IChidXR0b25FbCwgY29uZmlnKSA9PiB7XG4gIGJ1dHRvbkVsLmRpc2FibGVkID0gdHJ1ZTtcbiAgYnV0dG9uRWwuY2xhc3NMaXN0LmFkZChjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG59O1xuXG4vLyBBZGQgZXZlbnQgbGlzdGVuZXJzIHRvIGlucHV0c1xuY29uc3Qgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoZm9ybUVsLCBjb25maWcpID0+IHtcbiAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShmb3JtRWwucXVlcnlTZWxlY3RvckFsbChjb25maWcuaW5wdXRTZWxlY3RvcikpO1xuICBjb25zdCBidXR0b25FbGVtZW50ID0gZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICB0b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQsIGNvbmZpZyk7XG5cbiAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgY2hlY2tJbnB1dFZhbGlkaXR5KGZvcm1FbCwgaW5wdXRFbGVtZW50LCBjb25maWcpO1xuICAgICAgdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50LCBjb25maWcpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKGNvbmZpZykgPT4ge1xuICBjb25zdCBmb3JtTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmZvcm1TZWxlY3Rvcik7XG4gIGZvcm1MaXN0LmZvckVhY2goKGZvcm1FbCkgPT4ge1xuICAgIHNldEV2ZW50TGlzdGVuZXJzKGZvcm1FbCwgY29uZmlnKTtcbiAgfSk7XG59O1xuIiwiZXhwb3J0IGZ1bmN0aW9uIHNldEJ1dHRvblRleHQoe1xuICBidG4sXG4gIGlzTG9hZGluZyxcbiAgZGVmYXVsdFRleHQgPSBcIlNhdmVcIixcbiAgbG9hZGluZ1RleHQgPSBcIlNhdmluZy4uLlwiLFxufSkge1xuICBpZiAoaXNMb2FkaW5nKSB7XG4gICAgYnRuLnRleHRDb250ZW50ID0gbG9hZGluZ1RleHQ7XG4gIH0gZWxzZSB7XG4gICAgYnRuLnRleHRDb250ZW50ID0gZGVmYXVsdFRleHQ7XG4gIH1cbn1cbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQge1xuICBlbmFibGVWYWxpZGF0aW9uLFxuICBzZXR0aW5ncyxcbiAgcmVzZXRWYWxpZGF0aW9uLFxuICBkaXNhYmxlQnV0dG9uLFxufSBmcm9tIFwiLi4vc2NyaXB0cy92YWxpZGF0aW9uLmpzXCI7XG5pbXBvcnQgQXBpIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjtcbmltcG9ydCB7IHNldEJ1dHRvblRleHQgfSBmcm9tIFwiLi4vdXRpbHMvaGVscGVycy5qc1wiO1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogXCIxNjZjNmFjYy1hZDU3LTQyMTAtODc4YS1iODIyYTMyYzNmYWFcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgfSxcbn0pO1xuXG5hcGlcbiAgLmdldEFwcEluZm8oKVxuICAudGhlbigoW3VzZXJJbmZvLCBjYXJkc10pID0+IHtcbiAgICBjYXJkcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICByZW5kZXJDYXJkKGl0ZW0sIFwiYXBwZW5kXCIpO1xuICAgIH0pO1xuXG4gICAgcHJvZmlsZUF2YXRhci5zcmMgPSB1c2VySW5mby5hdmF0YXI7XG4gICAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSB1c2VySW5mby5uYW1lO1xuICAgIGpvYkVsZW1lbnQudGV4dENvbnRlbnQgPSB1c2VySW5mby5hYm91dDtcbiAgfSlcbiAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xuXG4vLyBQcm9maWxlIGVsZW1lbnRzXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idG5cIik7XG5jb25zdCBjYXJkTW9kYWxCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idG5cIik7XG5jb25zdCBhdmF0YXJNb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyLWJ0blwiKTtcbmNvbnN0IHByb2ZpbGVOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xuY29uc3Qgam9iRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XG5jb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIik7XG5cbi8vIEVkaXQgZm9ybSBlbGVtZW50c1xuY29uc3QgZWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LW1vZGFsXCIpO1xuY29uc3QgZWRpdEZvcm1FbGVtZW50ID0gZWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG5cbmNvbnN0IGVkaXRNb2RhbE5hbWVJbnB1dCA9IGVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtbmFtZS1pbnB1dFwiKTtcbmNvbnN0IGVkaXRNb2RhbERlc2NyaXB0aW9uSW5wdXQgPSBlZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcbiAgXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiXG4pO1xuXG4vLyBEZWxldGUgZm9ybSBlbGVtZW50c1xuY29uc3QgZGVsZXRlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1tb2RhbFwiKTtcbmNvbnN0IGRlbGV0ZUZvcm0gPSBkZWxldGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xuY29uc3QgY2FuY2VsQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2FuY2VsLWJ0blwiKTtcblxuLy8gQ2FyZCBmb3JtIGVsZW1lbnRzXG5jb25zdCBjYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkLW1vZGFsXCIpO1xuY29uc3QgY2FyZEZvcm1FbGVtZW50ID0gY2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG5jb25zdCBjYXJkU3VibWl0QnRuID0gY2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3N1Ym1pdC1idG5cIik7XG5cbmNvbnN0IGNhcmROYW1lSW5wdXQgPSBjYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZC1uYW1lLWlucHV0XCIpO1xuY29uc3QgY2FyZExpbmtJbnB1dCA9IGNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2FkZC1jYXJkLWxpbmstaW5wdXRcIik7XG5cbi8vIFByZXZpZXcgaW1hZ2UgcG9wdXAgZWxlbWVudHNcbmNvbnN0IHByZXZpZXdNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJldmlldy1tb2RhbFwiKTtcbmNvbnN0IHByZXZpZXdNb2RhbEltYWdlRWwgPSBwcmV2aWV3TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2VcIik7XG5jb25zdCBwcmV2aWV3TW9kYWxDYXB0aW9uRWwgPSBwcmV2aWV3TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2FwdGlvblwiKTtcblxuLy8gQ2FyZCByZWxhdGVkIGVsZW1lbnRzXG5jb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdGVtcGxhdGVcIik7XG5jb25zdCBjYXJkc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuY29uc3QgbW9kYWxzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbFwiKTtcblxubGV0IHNlbGVjdGVkQ2FyZCwgc2VsZWN0ZWRDYXJkSWQ7XG5cbi8vIEF2YXRhciBmb3JtIGVsZW1lbnRcbmNvbnN0IGF2YXRhck1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIik7XG5jb25zdCBhdmF0YXJGb3JtRWxlbWVudCA9IGF2YXRhck1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG5jb25zdCBhdmF0YXJJbnB1dCA9IGF2YXRhck1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1hdmF0YXItaW5wdXRcIik7XG5cbmZ1bmN0aW9uIGdldENhcmRFbGVtZW50KGRhdGEpIHtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkVGVtcGxhdGUuY29udGVudFxuICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcbiAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gIGNvbnN0IGNhcmROYW1lRWwgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xuICBjYXJkTmFtZUVsLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuXG4gIGNvbnN0IGNhcmRJbWFnZUVsID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgY2FyZEltYWdlRWwuc3JjID0gZGF0YS5saW5rO1xuICBjYXJkSW1hZ2VFbC5hbHQgPSBkYXRhLm5hbWU7XG5cbiAgY29uc3QgY2FyZExpa2VCdG4gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnRuXCIpO1xuICBjb25zdCBkZWxldGVCdXR0b24gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2RlbGV0ZS1idG5cIik7XG5cbiAgaWYgKGRhdGEuaXNMaWtlZCkge1xuICAgIGNhcmRMaWtlQnRuLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ0bl9saWtlZFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZUxpa2UoZXZ0LCBjYXJkSWQpIHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBsaWtlQnV0dG9uID0gZXZ0LnRhcmdldDtcbiAgICBsaWtlQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICBjb25zdCBpc0xpa2VkID0gbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoXCJjYXJkX19saWtlLWJ0bl9saWtlZFwiKTtcblxuICAgIGFwaVxuICAgICAgLmNoYW5nZUxpa2VTdGF0dXMoY2FyZElkLCBpc0xpa2VkKVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBsaWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoXCJjYXJkX19saWtlLWJ0bl9saWtlZFwiKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3I6XCIsIGVycik7XG4gICAgICB9KVxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICBsaWtlQnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICB9KTtcbiAgfVxuXG4gIGNhcmRMaWtlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgaGFuZGxlTGlrZShldnQsIGRhdGEuX2lkKTtcbiAgfSk7XG5cbiAgY2FyZEltYWdlRWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBvcGVuTW9kYWwocHJldmlld01vZGFsKTtcbiAgICBwcmV2aWV3TW9kYWxJbWFnZUVsLnNyYyA9IGRhdGEubGluaztcbiAgICBwcmV2aWV3TW9kYWxJbWFnZUVsLmFsdCA9IGRhdGEubmFtZTtcbiAgICBwcmV2aWV3TW9kYWxDYXB0aW9uRWwudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gIH0pO1xuXG4gIGRlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgIGhhbmRsZURlbGV0ZUNhcmQoY2FyZEVsZW1lbnQsIGRhdGEuX2lkKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuXG5jYW5jZWxCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgY2xvc2VNb2RhbChkZWxldGVNb2RhbCk7XG59KTtcblxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlU3VibWl0KGV2dCkge1xuICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgZGVsZXRlQnV0dG9uID0gZXZ0LnN1Ym1pdHRlcjtcbiAgc2V0QnV0dG9uVGV4dCh7XG4gICAgYnRuOiBkZWxldGVCdXR0b24sXG4gICAgaXNMb2FkaW5nOiB0cnVlLFxuICAgIGRlZmF1bHRUZXh0OiBcIkRlbGV0ZVwiLFxuICAgIGxvYWRpbmdUZXh0OiBcIkRlbGV0aW5nLi4uXCIsXG4gIH0pO1xuICBhcGlcbiAgICAuZGVsZXRlQ2FyZChzZWxlY3RlZENhcmRJZClcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBzZWxlY3RlZENhcmQucmVtb3ZlKCk7XG4gICAgICBjbG9zZU1vZGFsKGRlbGV0ZU1vZGFsKTtcbiAgICB9KVxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHNldEJ1dHRvblRleHQoe1xuICAgICAgICBidG46IGRlbGV0ZUJ1dHRvbixcbiAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgZGVmYXVsdFRleHQ6IFwiRGVsZXRlXCIsXG4gICAgICAgIGxvYWRpbmdUZXh0OiBcIkRlbGV0aW5nLi4uXCIsXG4gICAgICB9KTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2FyZChjYXJkRWxlbWVudCwgY2FyZElkKSB7XG4gIHNlbGVjdGVkQ2FyZCA9IGNhcmRFbGVtZW50O1xuICBzZWxlY3RlZENhcmRJZCA9IGNhcmRJZDtcbiAgb3Blbk1vZGFsKGRlbGV0ZU1vZGFsKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlUHJlc3NFc2MoZXZ0KSB7XG4gIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX29wZW5lZFwiKTtcbiAgICBpZiAobW9kYWwpIHtcbiAgICAgIGNsb3NlTW9kYWwobW9kYWwpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBvcGVuTW9kYWwobW9kYWwpIHtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlUHJlc3NFc2MpO1xuICBtb2RhbC5jbGFzc0xpc3QuYWRkKFwibW9kYWxfb3BlbmVkXCIpO1xufVxuXG5mdW5jdGlvbiBjbG9zZU1vZGFsKG1vZGFsKSB7XG4gIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZVByZXNzRXNjKTtcbiAgbW9kYWwuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX29wZW5lZFwiKTtcbn1cblxuZnVuY3Rpb24gcmVuZGVyQ2FyZChjYXJkRGF0YSwgcGxhY2VtZW50ID0gXCJwcmVwZW5kXCIpIHtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBnZXRDYXJkRWxlbWVudChjYXJkRGF0YSk7XG5cbiAgaWYgKHBsYWNlbWVudCA9PT0gXCJhcHBlbmRcIikge1xuICAgIGNhcmRzTGlzdC5hcHBlbmQoY2FyZEVsZW1lbnQpO1xuICB9IGVsc2Uge1xuICAgIGNhcmRzTGlzdC5wcmVwZW5kKGNhcmRFbGVtZW50KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVBZGRDYXJkU3VibWl0KGV2dCkge1xuICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7IG5hbWU6IGNhcmROYW1lSW5wdXQudmFsdWUsIGxpbms6IGNhcmRMaW5rSW5wdXQudmFsdWUgfTtcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gZXZ0LnN1Ym1pdHRlcjtcbiAgc2V0QnV0dG9uVGV4dCh7IGJ0bjogc3VibWl0QnV0dG9uLCBpc0xvYWRpbmc6IHRydWUgfSk7XG4gIGFwaVxuICAgIC5hZGRDYXJkKGlucHV0VmFsdWVzKVxuICAgIC50aGVuKChjYXJkRGF0YSkgPT4ge1xuICAgICAgcmVuZGVyQ2FyZChjYXJkRGF0YSwgXCJwcmVwZW5kXCIpO1xuICAgICAgY2xvc2VNb2RhbChjYXJkTW9kYWwpO1xuICAgICAgZGlzYWJsZUJ1dHRvbihjYXJkU3VibWl0QnRuLCBzZXR0aW5ncyk7XG4gICAgICBjYXJkRm9ybUVsZW1lbnQucmVzZXQoKTtcbiAgICB9KVxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIHNldEJ1dHRvblRleHQoeyBidG46IHN1Ym1pdEJ1dHRvbiwgaXNMb2FkaW5nOiBmYWxzZSB9KTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlRWRpdEZvcm1TdWJtaXQoZXZ0KSB7XG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCBzdWJtaXRCdXR0b24gPSBldnQuc3VibWl0dGVyO1xuICBzZXRCdXR0b25UZXh0KHtcbiAgICBidG46IHN1Ym1pdEJ1dHRvbixcbiAgICBpc0xvYWRpbmc6IHRydWUsXG4gICAgZGVmYXVsdFRleHQ6IFwiU2F2ZVwiLFxuICAgIGxvYWRpbmdUZXh0OiBcIlNhdmluZy4uLlwiLFxuICB9KTtcblxuICBhcGlcbiAgICAuZWRpdFVzZXJJbmZvKHtcbiAgICAgIG5hbWU6IGVkaXRNb2RhbE5hbWVJbnB1dC52YWx1ZSxcbiAgICAgIGFib3V0OiBlZGl0TW9kYWxEZXNjcmlwdGlvbklucHV0LnZhbHVlLFxuICAgIH0pXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgICAgam9iRWxlbWVudC50ZXh0Q29udGVudCA9IGRhdGEuYWJvdXQ7XG4gICAgICBjbG9zZU1vZGFsKGVkaXRNb2RhbCk7XG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBzZXRCdXR0b25UZXh0KHtcbiAgICAgICAgYnRuOiBzdWJtaXRCdXR0b24sXG4gICAgICAgIGlzTG9hZGluZzogZmFsc2UsXG4gICAgICAgIGRlZmF1bHRUZXh0OiBcIlNhdmVcIixcbiAgICAgICAgbG9hZGluZ1RleHQ6IFwiU2F2aW5nLi4uXCIsXG4gICAgICB9KTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQXZhdGFyU3VibWl0KGV2dCkge1xuICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3Qgc3VibWl0QnV0dG9uID0gZXZ0LnN1Ym1pdHRlcjtcbiAgc2V0QnV0dG9uVGV4dCh7XG4gICAgYnRuOiBzdWJtaXRCdXR0b24sXG4gICAgaXNMb2FkaW5nOiB0cnVlLFxuICAgIGRlZmF1bHRUZXh0OiBcIlNhdmVcIixcbiAgICBsb2FkaW5nVGV4dDogXCJTYXZpbmcuLi5cIixcbiAgfSk7XG4gIGFwaVxuICAgIC5lZGl0QXZhdGFySW5mbyhhdmF0YXJJbnB1dC52YWx1ZSlcbiAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgcHJvZmlsZUF2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgICAgIGF2YXRhckZvcm1FbGVtZW50LnJlc2V0KCk7XG4gICAgICBjbG9zZU1vZGFsKGF2YXRhck1vZGFsKTtcbiAgICAgIGRpc2FibGVCdXR0b24oZXZ0LnN1Ym1pdHRlciwgc2V0dGluZ3MpO1xuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgc2V0QnV0dG9uVGV4dCh7XG4gICAgICAgIGJ0bjogc3VibWl0QnV0dG9uLFxuICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxuICAgICAgICBkZWZhdWx0VGV4dDogXCJTYXZlXCIsXG4gICAgICAgIGxvYWRpbmdUZXh0OiBcIlNhdmluZy4uLlwiLFxuICAgICAgfSk7XG4gICAgfSk7XG59XG5cbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGVkaXRNb2RhbE5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVOYW1lLnRleHRDb250ZW50O1xuICBlZGl0TW9kYWxEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gam9iRWxlbWVudC50ZXh0Q29udGVudDtcbiAgb3Blbk1vZGFsKGVkaXRNb2RhbCk7XG4gIHJlc2V0VmFsaWRhdGlvbihcbiAgICBlZGl0Rm9ybUVsZW1lbnQsXG4gICAgW2VkaXRNb2RhbE5hbWVJbnB1dCwgZWRpdE1vZGFsRGVzY3JpcHRpb25JbnB1dF0sXG4gICAgc2V0dGluZ3NcbiAgKTtcbn0pO1xuXG4vLyBjbG9zZSBtb2RhbCBvdmVybGF5XG5tb2RhbHMuZm9yRWFjaCgobW9kYWwpID0+IHtcbiAgbW9kYWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICBpZiAoXG4gICAgICBldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm1vZGFsX29wZW5lZFwiKSB8fFxuICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2UtYnRuXCIpXG4gICAgKSB7XG4gICAgICBjbG9zZU1vZGFsKG1vZGFsKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbi8vIGNsaWNrIHRoZSBjbG9zZSBidXR0b24gb24gdGhlIGVkaXQgcHJvZmlsZSBtb2RhbCB0byBjbG9zZSB0aGF0IG1vZGFsXG5cbmNhcmRNb2RhbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBvcGVuTW9kYWwoY2FyZE1vZGFsKTtcbn0pO1xuXG5hdmF0YXJNb2RhbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBvcGVuTW9kYWwoYXZhdGFyTW9kYWwpO1xufSk7XG5cbmF2YXRhckZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlQXZhdGFyU3VibWl0KTtcbmRlbGV0ZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVEZWxldGVTdWJtaXQpO1xuXG5lZGl0Rm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVFZGl0Rm9ybVN1Ym1pdCk7XG5jYXJkRm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVBZGRDYXJkU3VibWl0KTtcblxuZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7XG4iLCJjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgLy8gZ2V0cyBib3RoIHVzZXIgaW5mb3JtYXRpb24gYW5kIGluaXRpYWwgY2FyZHMgaW50byBhIHNpbmdsZSByZXF1ZXN0XG4gIGdldEFwcEluZm8oKSB7XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmdldFVzZXJJbmZvKCksIHRoaXMuZ2V0SW5pdGlhbENhcmRzKCldKTtcbiAgfVxuXG4gIC8vIGZldGNoZXMgYWxsIGNhcmRzIGZyb20gdGhlIHNlcnZlclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cblxuICAvLyB1cGRhdGluZyB5b3VyIHByb2ZpbGUgaW5mb3JtYXRpb25cbiAgZWRpdFVzZXJJbmZvKHsgbmFtZSwgYWJvdXQgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYWJvdXQsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cblxuICAvLyByZWFkaW5nIHByb2ZpbGUgaW5mb3JtYXRpb25cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cblxuICAvLyB1cGRhdGVzIHRoZSB1c2VyJ3MgcHJvZmlsZSBwaWN0dXJlL2F2YXRhclxuICBlZGl0QXZhdGFySW5mbyhhdmF0YXIpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXIsXG4gICAgICB9KSxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cblxuICAvLyBkZWxldGVzIGEgc3BlY2lmaWMgY2FyZCBmcm9tIHRoZSBzZXJ2ZXJcbiAgZGVsZXRlQ2FyZChpZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKVxuICB9XG5cbiAgYWRkQ2FyZCh7IG5hbWUsIGxpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKVxuICB9XG5cbiAgY2hhbmdlTGlrZVN0YXR1cyhpZCwgaXNMaWtlZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogaXNMaWtlZCA/IFwiREVMRVRFXCIgOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpXG4gIH1cblxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFwaTtcbiJdLCJuYW1lcyI6WyJzZXR0aW5ncyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiaGlkZUlucHV0RXJyb3IiLCJmb3JtRWwiLCJpbnB1dEVsIiwiY29uZmlnIiwiZXJyb3JNc2dFbCIsInF1ZXJ5U2VsZWN0b3IiLCJpZCIsImNsYXNzTGlzdCIsInJlbW92ZSIsInRleHRDb250ZW50IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJpbnB1dExpc3QiLCJidXR0b25FbCIsInNvbWUiLCJpbnB1dCIsInZhbGlkaXR5IiwidmFsaWQiLCJoYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlQnV0dG9uIiwiZGlzYWJsZWQiLCJhZGQiLCJzZXRCdXR0b25UZXh0IiwiX3JlZiIsImJ0biIsImlzTG9hZGluZyIsImRlZmF1bHRUZXh0IiwibG9hZGluZ1RleHQiLCJhcGkiLCJjb25zdHJ1Y3RvciIsImJhc2VVcmwiLCJoZWFkZXJzIiwidGhpcyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJnZXRBcHBJbmZvIiwiUHJvbWlzZSIsImFsbCIsImdldFVzZXJJbmZvIiwiZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJlZGl0VXNlckluZm8iLCJfcmVmMiIsIm5hbWUiLCJhYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZWRpdEF2YXRhckluZm8iLCJhdmF0YXIiLCJkZWxldGVDYXJkIiwiYWRkQ2FyZCIsIl9yZWYzIiwibGluayIsImNoYW5nZUxpa2VTdGF0dXMiLCJpc0xpa2VkIiwicmVzIiwib2siLCJqc29uIiwicmVqZWN0Iiwic3RhdHVzIiwiYXV0aG9yaXphdGlvbiIsInVzZXJJbmZvIiwiY2FyZHMiLCJmb3JFYWNoIiwiaXRlbSIsInJlbmRlckNhcmQiLCJwcm9maWxlQXZhdGFyIiwic3JjIiwicHJvZmlsZU5hbWUiLCJqb2JFbGVtZW50IiwiY2F0Y2giLCJjb25zb2xlIiwiZXJyb3IiLCJwcm9maWxlRWRpdEJ1dHRvbiIsImRvY3VtZW50IiwiY2FyZE1vZGFsQnV0dG9uIiwiYXZhdGFyTW9kYWxCdXR0b24iLCJlZGl0TW9kYWwiLCJlZGl0Rm9ybUVsZW1lbnQiLCJlZGl0TW9kYWxOYW1lSW5wdXQiLCJlZGl0TW9kYWxEZXNjcmlwdGlvbklucHV0IiwiZGVsZXRlTW9kYWwiLCJkZWxldGVGb3JtIiwiY2FuY2VsQnV0dG9uIiwiY2FyZE1vZGFsIiwiY2FyZEZvcm1FbGVtZW50IiwiY2FyZFN1Ym1pdEJ0biIsImNhcmROYW1lSW5wdXQiLCJjYXJkTGlua0lucHV0IiwicHJldmlld01vZGFsIiwicHJldmlld01vZGFsSW1hZ2VFbCIsInByZXZpZXdNb2RhbENhcHRpb25FbCIsImNhcmRUZW1wbGF0ZSIsImNhcmRzTGlzdCIsIm1vZGFscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzZWxlY3RlZENhcmQiLCJzZWxlY3RlZENhcmRJZCIsImF2YXRhck1vZGFsIiwiYXZhdGFyRm9ybUVsZW1lbnQiLCJhdmF0YXJJbnB1dCIsImhhbmRsZVByZXNzRXNjIiwiZXZ0Iiwia2V5IiwibW9kYWwiLCJjbG9zZU1vZGFsIiwib3Blbk1vZGFsIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjYXJkRGF0YSIsInBsYWNlbWVudCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsImNhcmRFbGVtZW50IiwiZGF0YSIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJjYXJkSW1hZ2VFbCIsImFsdCIsImNhcmRMaWtlQnRuIiwiZGVsZXRlQnV0dG9uIiwiY2FyZElkIiwicHJldmVudERlZmF1bHQiLCJsaWtlQnV0dG9uIiwidGFyZ2V0IiwiY29udGFpbnMiLCJ0b2dnbGUiLCJlcnIiLCJmaW5hbGx5IiwiaGFuZGxlTGlrZSIsIl9pZCIsImhhbmRsZURlbGV0ZUNhcmQiLCJnZXRDYXJkRWxlbWVudCIsImFwcGVuZCIsInByZXBlbmQiLCJyZXNldFZhbGlkYXRpb24iLCJ2YWx1ZSIsInN1Ym1pdEJ1dHRvbiIsInN1Ym1pdHRlciIsInJlc2V0IiwiaW5wdXRWYWx1ZXMiLCJzZXRFdmVudExpc3RlbmVycyIsIkFycmF5IiwiZnJvbSIsImJ1dHRvbkVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJjaGVja0lucHV0VmFsaWRpdHkiLCJzaG93SW5wdXRFcnJvciIsImVycm9yTXNnIiwiZXJyb3JFbGVtZW50SWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=